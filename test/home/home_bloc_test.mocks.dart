// Mocks generated by Mockito 5.3.2 from annotations
// in flutterprojectsetup/test/home/home_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:flutterprojectsetup/core/network/network_provider.dart' as _i5;
import 'package:flutterprojectsetup/data/model/user.dart' as _i4;
import 'package:flutterprojectsetup/data/repository/user/user_repository.dart'
    as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [UserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserRepository extends _i1.Mock implements _i2.UserRepository {
  MockUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<List<_i4.User>> getRemoteUser() => (super.noSuchMethod(
        Invocation.method(
          #getRemoteUser,
          [],
        ),
        returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i3.Future<List<_i4.User>>);
  @override
  _i3.Future<void> addListOfUserInLocal(List<_i4.User>? user) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListOfUserInLocal,
          [user],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<List<_i4.User>> getUsersFromLocal() => (super.noSuchMethod(
        Invocation.method(
          #getUsersFromLocal,
          [],
        ),
        returnValue: _i3.Future<List<_i4.User>>.value(<_i4.User>[]),
      ) as _i3.Future<List<_i4.User>>);
  @override
  _i3.Future<int> deleteAllUsersFromLocal() => (super.noSuchMethod(
        Invocation.method(
          #deleteAllUsersFromLocal,
          [],
        ),
        returnValue: _i3.Future<int>.value(0),
      ) as _i3.Future<int>);
  @override
  _i3.Future<void> setLatestResponseTime(int? timestamp) => (super.noSuchMethod(
        Invocation.method(
          #setLatestResponseTime,
          [timestamp],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
  @override
  _i3.Future<int?> getLatestResponseTimeStamp() => (super.noSuchMethod(
        Invocation.method(
          #getLatestResponseTimeStamp,
          [],
        ),
        returnValue: _i3.Future<int?>.value(),
      ) as _i3.Future<int?>);
}

/// A class which mocks [NetworkProvider].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkProvider extends _i1.Mock implements _i5.NetworkProvider {
  MockNetworkProvider() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<bool> hasInternetConnection() => (super.noSuchMethod(
        Invocation.method(
          #hasInternetConnection,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
  @override
  _i3.Stream<bool> onStateChange() => (super.noSuchMethod(
        Invocation.method(
          #onStateChange,
          [],
        ),
        returnValue: _i3.Stream<bool>.empty(),
      ) as _i3.Stream<bool>);
}
